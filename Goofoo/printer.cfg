
# This file contains common pin mappings for MKS SKIPR
# boards. To use this config, the firmware should be compiled for the
# stm32f407. When running "make menuconfig", select the 48KiB
# bootloader, and enable "Serial for communication" and select the "on USART1 PA10/PA9"

# The "make flash" command does not work on the MKS SKIPR. Instead,
# after running "make", copy the generated "out/klipper.bin" file to a
# file named "mks_skipr.bin" on an SD card and then restart the
# MKS SKIPR with that SD card.

# See docs/Config_Reference.md for a description of parameters.
#[include MKS_THR.cfg]
#[include mainsail.cfg]
#[include MKS_THR.cfg]
[include bed_mesh.cfg]
[include chroma_head.cfg]
[include input_shaper.cfg]
[include cp_macro.cfg]
[include kcm.cfg]

[mcu]
# The hardware use USART1 PA10/PA9 connect to RK3328
#serial: /dev/ttyACM0

serial: /dev/ttyS0
restart_method: command


[stepper_x]
step_pin:PC14
dir_pin:PC13
enable_pin:!PC15
microsteps: 16
rotation_distance: 40
full_steps_per_rotation:200  #set to 400 for 0.9 degree stepper
endstop_pin:!PA14
position_min: -12
position_endstop: -12
position_max: 222
homing_speed:100
homing_retract_dist:5
homing_positive_dir:false
step_pulse_duration:0.000002
[stepper_y]
step_pin:PE5
dir_pin:PE4
enable_pin:!PD14
microsteps:16
rotation_distance: 40
full_steps_per_rotation:200  #set to 400 for 0.9 degree stepper
endstop_pin:!PA15
position_min: 0
position_endstop:223
position_max:223
homing_speed:50
homing_retract_dist:5
homing_positive_dir:true
step_pulse_duration:0.000002
[stepper_z]
step_pin:PE1
dir_pin:!PE0
enable_pin: !PE2
microsteps: 16
rotation_distance: 4
full_steps_per_rotation: 200
#gear_ratio: 80:16
endstop_pin:probe:z_virtual_endstop#!PB15 ## PB12 for Z-max; endstop have'!' is NO

##  Z-position of nozzle (in mm) to z-endstop trigger point relative to print surface (Z0)
##  (+) value = endstop above Z0, (-) value = endstop below
##	Increasing position_endstop brings nozzle closer to the bed
##  After you run Z_ENDSTOP_CALIBRATE, position_endstop will be stored at the very end of your config
##position_endstop:0
position_max: 220
position_min: -10
homing_speed: 8
second_homing_speed: 3



# [stepper_z1]
# step_pin:PD6
# dir_pin:PD5
# enable_pin:!PD7
# microsteps:16
# rotation_distance: 40
# full_steps_per_rotation: 200
# gear_ratio: 80:16

# [stepper_z2]
# step_pin:PD2
# dir_pin:PD1
# enable_pin:!PD3
# microsteps: 16
# rotation_distance: 40
# full_steps_per_rotation: 200
# gear_ratio: 80:16

# [stepper_z3]
# step_pin:PC7
# dir_pin:PC6
# enable_pin:!PC8
# microsteps:16
# rotation_distance:40
# full_steps_per_rotation: 200
# gear_ratio:80:16


[heater_bed]
heater_pin: PD12
sensor_type: NTC 100K MGB18-104F39050L32
sensor_pin: PC0
max_power: 1.0
control = pid
pid_kp = 71.039
pid_ki = 2.223
pid_kd = 567.421
min_temp: 0
max_temp: 200

#fan for printed model FAN0
# [fan]
# pin: PA2

[controller_fan my_controller_fan1]
pin: PA2

[temperature_fan controllerFan0]
pin: PA1
sensor_type: temperature_mcu
sensor_mcu: mcu
control: watermark
min_temp: 10
max_temp: 65
target_temp: 25





#fan for hotend FAN1
#[heater_fan my_nozzle_fan]
#[heater_fan fan1]
##pin: PA1
###shutdown_speed: 1

#fan for control board FAN2
#[heater_fan my_control_fan]

####[output_pin caselight]
##  Chamber Lighting - In 5V-RGB Position
#####pin: PA0
######pwm: false
#######shutdown_value:0
########value:0
#cycle_time:0.01
[output_pin caselight]
##  Chamber Lighting - In 5V-RGB Position
pin: PA0
pwm: false
shutdown_value:0
value:0
#cycle_time:0.01


# [heater_generic DryerBox]
# #gcode_id:
# #   使用M105查询温度时使用的ID。
# #   必须提供此参数。
# heater_pin:PB0
# max_power:1.0
# sensor_type:NTC 100K MGB18-104F39050L32
# sensor_pin:PC2
# # smooth_time:
# control:pid
# pid_Kp:71.039
# pid_Ki:2.223
# pid_Kd:567.421
# # pwm_cycle_time:
# min_temp:-30
# max_temp:150

[heater_generic Chamber]
#gcode_id:
#   使用M105查询温度时使用的ID。
#   必须提供此参数。
heater_pin:PA3
max_power:1.0
sensor_type:NTC 100K MGB18-104F39050L32
sensor_pin:PC3
# smooth_time:
control:pid
pid_Kp:71.039
pid_Ki:2.223
pid_Kd:567.421
# pwm_cycle_time:
min_temp:-30
max_temp:150

# [verify_heater DryerBox]
# max_error: 120
# check_gain_time:36000
# hysteresis: 10
# heating_gain: 1

[verify_heater Chamber]
max_error: 120
check_gain_time:36000
hysteresis: 10
heating_gain: 1

#[verify_heater extruder]
#max_error: 120
#check_gain_time:36000
#hysteresis: 10
#heating_gain: 2

[verify_heater heater_bed]
max_error: 120
check_gain_time:36000
hysteresis: 10
heating_gain: 1

[safe_z_home]
home_xy_position: 110,120
speed: 75
z_hop: 10
z_hop_speed: 2

# [homing_override]
# set_position_z:0
# gcode: 
#    G91 
#     G1 Z5 F300
#     G90
#     {% if params.X is defined %}
#     {% if params.Y is undefined %}
#     {% if params.Z is undefined %}
#     G28 X 
#     {% endif %}
#     {% endif %}
#     {% endif %}
#     {% if params.Y is defined %}
#     {% if params.X is undefined %}
#     {% if params.Z is undefined %}
#     G28 Y 
#     {% endif %}
#     {% endif %}
#     {% endif %}
#     {% if params.X is undefined %}
#     {% if params.Y is undefined %}
#     {% if params.Z is defined %}
#     G28 X Y
#     G1 X110 Y110 F3000
#     G28 Z
#     {% endif %}
#     {% endif %}
#     {% endif %}
#     {% if params.X is defined %}
#     {% if params.Y is defined %}
#     {% if params.Z is undefined %}
#     G28 X Y
#     {% endif %}
#     {% endif %}
#     {% endif %}
#     {% if params.X is undefined %}
#     {% if params.Y is undefined %}
#     {% if params.Z is undefined %}
#     G28 X Y
#     G1 X110 Y110 F3000
#     G28 Z
#     {% endif %}
#     {% endif %}
#     {% endif %} 
#     G90
#    BED_MESH_PROFILE LOAD=default

####################################################################
#	Homing and Gantry Adjustment Routines
#####################################################################
[idle_timeout]
timeout: 36000


[bed_screws]
screw1:20,20 
screw2:180,20
screw3:180,180
screw4:20,180



[printer]
kinematics:corexy
max_velocity: 500
max_accel: 6000
max_accel_to_decel: 4000
max_z_velocity: 10
max_z_accel: 50
square_corner_velocity: 5
#####################################################################
# LED Control
#####################################################################

#[output_pin caselight ](Use PA9)
##  Chamber Lighting - In 5V-RGB Position
#pin: PC5
#pwm: true
#shutdown_value: 0
#value:100
#cycle_time: 0.01

########################################
# TMC UART configuration
########################################

[tmc2209 stepper_x]
uart_pin: PE6
run_current: 1.0
hold_current: 0.5
sense_resistor: 0.110
interpolate: True
stealthchop_threshold:0

[tmc2209 stepper_y]
uart_pin: PE3
run_current: 1.0
hold_current: 0.5
sense_resistor: 0.110
interpolate: True
stealthchop_threshold:0

[tmc2209 stepper_z]
uart_pin: PB7
run_current: 0.715
hold_current: 0.5
sense_resistor: 0.110
interpolate: True
stealthchop_threshold: 120

#[probe]
#pin:MKS_THR:gpio21
#x_offset:0
#y_offset:20
#z_offset:0
#speed: 10.0
#samples: 5
#samples_result:average
#sample_retract_dist: 3.0
#samples_tolerance: 0.03
#samples_tolerance_retries:6
#lift_speed:10

[gcode_macro G29]
gcode:
    # BED_MESH_CALIBRATE
    
#[bed_mesh]
#speed:50                #调平速度
#horizontal_move_z:5.0   #调平中Z抬高高度
#mesh_min:10,20     #探测点最小位置
#mesh_max:185,190   #探测点最大位置
#probe_count:7,7      #调平点数
#algorithm: bicubic   #插值算法:可以是"lagrange"或者"bicubic"  lagrange最多只能6*6
#bicubic_tension: 0.3

#[resonance_tester]
#accel_chip: adxl345
#probe_points:
    120,105,20
    
[virtual_sdcard]
path:/home/mks/uploads
path: ~/printer_data/gcodes

#[pause_resume]

# [gcode_macro M106]
# gcode:
#    {% if params.S is defined %}
#      {% if params.S|int == 255 %}
#       {% set realspeed = 1 %}
#      {% else %}
#        {% if params.S|int == 0 %}
#          {% set realspeed = 0 %}
#        {% else %}
#          {% set realspeed = 0.392156862745098*params.S|int %}
#        {% endif %}
#      {% endif %}
#    {% else %}
#      {% set realspeed = 1 %}
#    {% endif %}

#    SET_FAN_SPEED FAN=fan_1 SPEED={realspeed}
#    SET_FAN_SPEED FAN=fan_0 SPEED={realspeed}
    

# [gcode_macro M107]
# gcode:
#      SET_FAN_SPEED FAN=fan_1 SPEED=0
#      SET_FAN_SPEED FAN=fan_0 SPEED=0      


#[gcode_macro CANCEL_PRINT]
#[gcode_macro CANCEL_PRINT]
#rename_existing: BASE_CANCEL_PRINT
#gcode:
    # SET_IDLE_TIMEOUT TIMEOUT={printer.configfile.settings.idle_timeout.timeout} ; set timeout back to configured value
    # CLEAR_PAUSE
    # SDCARD_RESET_FILE
    # G1 Z{printer.toolhead.axis_maximum.z-20} F600
    # G1  X0 Y0 F7800
    # M107
    # M104 S0
    # M140 S0
    # PRINT_END
    # BASE_CANCEL_PRINT


[display_status]

# [gcode_macro LOAD_FILAMENT]
# gcode:
#     {% set speed = params.SPEED|default(300) %}
#     {% set max_velocity = printer.configfile.settings['extruder'].max_extrude_only_velocity %}
#     SAVE_GCODE_STATE NAME=load_state
#     G91
#     G92 E0
#     G1 E50 F{max_velocity} # fast-load
#     G1 E25 F{speed} # purge
#     RESTORE_GCODE_STATE NAME=load_state
# [gcode_macro UNLOAD_FILAMENT]
# gcode:
#     {% set speed = params.SPEED|default(300) %}
#     {% set max_velocity = printer.configfile.settings['extruder'].max_extrude_only_velocity %}
#     SAVE_GCODE_STATE NAME=unload_state
#     G91
#     G92 E0
#     G1 E-25 F{speed} # purge
#     G1 E-50 F{max_velocity} # fast-unload
#     RESTORE_GCODE_STATE NAME=unload_state
      
# [gcode_macro PAUSE]
# rename_existing: BASE_PAUSE
# gcode:
#     # Parameters
#     {% set z = params.Z|default(10)|int %}                                                   ; z hop amount
    
#     {% if printer['pause_resume'].is_paused|int == 0 %}     
#         SET_GCODE_VARIABLE MACRO=RESUME VARIABLE=zhop VALUE={z}                              ; set z hop variable for reference in resume macro
#         SET_GCODE_VARIABLE MACRO=RESUME VARIABLE=etemp VALUE={printer['extruder'].target}    ; set hotend temp variable for reference in resume macro
                                
# #       SET_FILAMENT_SENSOR SENSOR=fila ENABLE=0                                             ; disable filament sensor       
#         SAVE_GCODE_STATE NAME=PAUSE                                                          ; save current print position for resume                
#         BASE_PAUSE                                                                           ; pause print
#         {% if (printer.gcode_move.position.z + z) < printer.toolhead.axis_maximum.z %}       ; check that zhop doesn't exceed z max
#             G91                                                                              ; relative positioning
#             G1 Z{z} F900                                                                     ; raise Z up by z hop amount
#         {% else %}
#             SET_GCODE_VARIABLE MACRO=RESUME VARIABLE=zhop VALUE=0
#         {% endif %}
#         G90                                                                                  ; absolute positioning
#         G1 X20 Y20 F3000   ; park toolhead at front center
#         SAVE_GCODE_STATE NAME=PAUSEPARK                                                      ; save parked position in case toolhead is moved during the pause (otherwise the return zhop can error) 
#         M104 S140                                                                           ; turn off hotend
#         SET_IDLE_TIMEOUT TIMEOUT=43200                                                       ; set timeout to 12 hours
#     {% endif %}

# [gcode_macro RESUME]
# rename_existing: BASE_RESUME
# variable_zhop: 0
# variable_etemp: 0
# gcode:
#     # Parameters
#     {% set e = params.E|default(2.5)|int %}                                          ; hotend prime amount (in mm)
    
#     {% if printer['pause_resume'].is_paused|int == 1 %}
# #        SET_FILAMENT_SENSOR SENSOR=fila ENABLE=1                          ; enable filament sensor
#         #INITIAL_RGB                                                                    ; reset LCD color
#         SET_IDLE_TIMEOUT TIMEOUT={printer.configfile.settings.idle_timeout.timeout}  ; set timeout back to configured value
#         {% if etemp > 0 %}
#             M109 S{etemp|int}                                                        ; wait for hotend to heat back up
#         {% endif %}
#         RESTORE_GCODE_STATE NAME=PAUSEPARK MOVE=1 MOVE_SPEED=100                     ; go back to parked position in case toolhead was moved during pause (otherwise the return zhop can error)  
#         G91                                                                          ; relative positioning
#         M83                                                                          ; relative extruder positioning                     
#         RESTORE_GCODE_STATE NAME=PAUSE MOVE=1 MOVE_SPEED=60  
#         {% if printer[printer.toolhead.extruder].temperature >= printer.configfile.settings.extruder.min_extrude_temp %}                                                
#            G1 Z{zhop * -1} E{e} F900                                                ; prime nozzle by E, lower Z back down
#         {% else %}                      
#            G1 Z{zhop * -1} F900                                                     ; lower Z back down without priming (just in case we are testing the macro with cold hotend)
#         {% endif %}
#         RESTORE_GCODE_STATE NAME=PAUSE MOVE=1 MOVE_SPEED=60                               ; restore position
#         BASE_RESUME                                                                  ; resume print
#     {% endif %}    

# [gcode_macro M109]
# rename_existing: M99109
# gcode:
#     #Parameters
#     {% set s = params.S|float %}
#     M104 {% for p in params %}{'%s%s' % (p, params[p])}{% endfor %}  ; Set hotend temp
#     {% if s != 0 %}
#         TEMPERATURE_WAIT SENSOR=extruder MINIMUM={s-5} MAXIMUM={s+5}   ; Wait for hotend temp (within 5 degree)
#     {% endif %}

# [filament_switch_sensor fila]
# pause_on_runout: True
# runout_gcode:
#               PAUSE
#               SET_FILAMENT_SENSOR SENSOR=fila ENABLE=1
# event_delay: 3.0
# pause_delay: 0.5
# # switch_pin: !cp_Driver:PB9     #PA13
[gcode_macro _TOGGLE_CASELIGHT]
gcode:

 SET_PIN PIN=caselight VALUE={(not printer['output_pin caselight'].value)|int}
# [gcode_macro CANCEL_PRINT]
# rename_existing: BASE_CANCEL_PRINT
# gcode:
#     SET_IDLE_TIMEOUT TIMEOUT={printer.configfile.settings.idle_timeout.timeout} ; set timeout back to configured value
#     CLEAR_PAUSE
#     SDCARD_RESET_FILE
#     G91
#     G1 Z20 F600
#     G90
#     M104 S0
#     M140 S0
#     #M106 S0
#     BASE_CANCEL_PRINT
# This file provides examples of Klipper G-Code macros.  The snippets
# in this file may be copied into the main printer.cfg file and
# customized.

# See docs/Config_Reference.md for a description of parameters.


######################################################################
# Start Print and End Print
######################################################################

# Replace the slicer's custom start and end g-code scripts with
# START_PRINT and END_PRINT. See docs/Slicers.md for more information on using these macros.

# [gcode_macro PRINT_START]
# gcode:
#     {% set BED_TEMP = params.BED_TEMP|default(60)|float %}
#     {% set EXTRUDER_TEMP = params.EXTRUDER_TEMP|default(190)|float %}
#     # Start bed heating
#     M140 S{BED_TEMP}
#     # Use absolute coordinates
#     G90
#     # Reset the G-Code Z offset (adjust Z offset if needed)
#     SET_GCODE_OFFSET Z=0.0
#     # Home the printer
#     G28
#     # Move the nozzle near the bed
#     G1 Z5 F3000
#     # Move the nozzle very close to the bed
#     G1 Z0.15 F300
#     # Wait for bed to reach temperature
#     M190 S{BED_TEMP}
#     # Set and wait for nozzle to reach temperature
#     M109 S{EXTRUDER_TEMP}

# [gcode_macro PRINT_END]
# gcode:
#     # Turn off bed, extruder, and fan
#     M140 S0
#     M104 S0
#     #M106 S0
#     # Move nozzle away from print while retracting
#     G91
#     G1 X-2 Y-2 E-3 F300
#     # Raise nozzle by 10mm
#     G1 Z10 F3000
#     G90
#     # Disable steppers
#     M84

[include moonraker_obico_macros.cfg]

#*# <---------------------- SAVE_CONFIG ---------------------->
#*# DO NOT EDIT THIS BLOCK OR BELOW. The contents are auto-generated.
#*#
#*# [probe]
#*# z_offset = 1.000
#*#
#*# [input_shaper]
#*# shaper_type_x = zv
#*# shaper_freq_x = 55.8
#*# shaper_type_y = zv
#*# shaper_freq_y = 46.2
#*#
#*# [bed_mesh default]
#*# version = 1
#*# points =
#*# 	-0.088750, -0.121250, -0.143750, -0.170000, -0.176250, -0.166250, -0.136250, -0.050000, 0.105000
#*# 	0.026250, -0.020000, -0.040000, -0.062500, -0.072500, -0.067500, -0.050000, -0.031250, 0.075000
#*# 	0.026250, 0.002500, -0.036250, -0.050000, -0.043750, -0.028750, -0.028750, -0.012500, 0.035000
#*# 	0.031250, 0.022500, -0.013750, -0.026250, -0.018750, 0.003750, 0.018750, 0.030000, 0.043750
#*# 	0.030000, 0.015000, -0.010000, -0.015000, 0.012500, 0.025000, 0.043750, 0.043750, 0.037500
#*# 	0.068750, 0.060000, 0.040000, 0.045000, 0.055000, 0.072500, 0.093750, 0.088750, 0.098750
#*# 	0.082500, 0.086250, 0.073750, 0.085000, 0.112500, 0.127500, 0.155000, 0.160000, 0.162500
#*# 	0.080000, 0.083750, 0.093750, 0.092500, 0.117500, 0.131250, 0.173750, 0.195000, 0.185000
#*# 	0.106250, 0.100000, 0.108750, 0.117500, 0.143750, 0.177500, 0.221250, 0.240000, 0.247500
#*# x_count = 9
#*# y_count = 9
#*# mesh_x_pps = 2
#*# mesh_y_pps = 2
#*# algo = bicubic
#*# tension = 0.2
#*# min_x = 33.0
#*# max_x = 221.96
#*# min_y = 10.0
#*# max_y = 200.0
#*#
#*# [bed_mesh default2]
#*# version = 1
#*# points =
#*# 	-0.132500, -0.148750, -0.166250, -0.161250, -0.146250, -0.136250, -0.096250, -0.026250, 0.105000
#*# 	-0.023750, -0.032500, -0.051250, -0.060000, -0.052500, -0.035000, -0.015000, 0.001250, 0.083750
#*# 	-0.026250, -0.038750, -0.061250, -0.065000, -0.050000, -0.030000, -0.023750, -0.018750, 0.027500
#*# 	0.008750, -0.005000, -0.025000, -0.023750, -0.013750, 0.001250, 0.007500, 0.011250, 0.032500
#*# 	-0.002500, -0.011250, -0.040000, -0.047500, -0.027500, -0.008750, 0.001250, -0.007500, -0.012500
#*# 	0.047500, 0.031250, 0.007500, 0.008750, 0.021250, 0.030000, 0.035000, 0.015000, 0.015000
#*# 	0.062500, 0.058750, 0.045000, 0.045000, 0.060000, 0.063750, 0.071250, 0.062500, 0.048750
#*# 	0.067500, 0.063750, 0.052500, 0.041250, 0.047500, 0.046250, 0.066250, 0.060000, 0.033750
#*# 	0.077500, 0.063750, 0.065000, 0.050000, 0.053750, 0.063750, 0.076250, 0.068750, 0.072500
#*# x_count = 9
#*# y_count = 9
#*# mesh_x_pps = 2
#*# mesh_y_pps = 2
#*# algo = bicubic
#*# tension = 0.2
#*# min_x = 33.0
#*# max_x = 221.96
#*# min_y = 10.0
#*# max_y = 200.0
