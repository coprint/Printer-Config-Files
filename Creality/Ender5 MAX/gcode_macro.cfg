# CR-10 SE
# [gcode_macro G29]
# gcode:
#     NOZZLE_CLEAR
#     M106 S0
#     BED_MESH_CALIBRATE
#     CXSAVE_CONFIG

[gcode_macro PRINTER_PARAM]
variable_z_safe_pause: 0.0
variable_z_safe_g28: 3.0
variable_max_x_position: 400 #220.0
variable_max_y_position: 400 #220.0
variable_max_z_position: 400 #250.0
variable_fans: 3
variable_auto_g29: 0
variable_default_bed_temp: 45
variable_default_extruder_temp: 140 #240
variable_g28_extruder_temp: 140
variable_g28_ext_temp: 140
variable_print_calibration: 0
variable_fan0_min: 90
variable_extruder_save_temp: 0
gcode:

[gcode_macro STRUCTURE_PARAM]
variable_bed_length: 400 #220
variable_bed_width: 400 #220
variable_bed_hight: 400 #250
variable_laser_x_offset: 45.0
variable_laser_y_offset: -8.0
variable_laser_z_offset: 3.0
variable_cali_x_offset: 200.9
variable_cali_y_offset: 8.9
variable_cali_z_offset: 5.0
gcode:

[virtual_sdcard]
#path: /home/rock/gcode_files
path: /usr/data/printer_data/gcodes

[pause_resume]

[display_status]
[gcode_macro CANCEL_PRINT]
description: Cancel the actual running print
rename_existing: CANCEL_PRINT_BASE
gcode:
    G91
    G1 Z50
    G90
    G1 F3000X400Y400
    M104 S0
    M140 S0
    M107
    M84
    TURN_OFF_HEATERS
    CANCEL_PRINT_BASE
    FINISH_INIT


[gcode_macro PRINT_CALIBRATION_EXT]
# This part of the command is replaced by the application side without passing parameters
gcode:
  #CX_PRINT_LEVELING_CALIBRATION
  {% if 'PROBE_COUNT' in params|upper %}
    {% set get_count = ('PROBE_COUNT' + params.PROBE_COUNT) %}
  {%else %}
    {% set get_count = "" %}
  {% endif %}

  {% set bed_temp = printer.custom_macro.default_bed_temp %}
  {% set extruder_temp = printer.custom_macro.g28_ext_temp %}
  {% set nozzle_clear_temp = printer.custom_macro.default_extruder_temp %}

  {% if 'BED_TEMP' in params|upper %}
    {% set bed_temp = params.BED_TEMP %}
  {% endif %}

  {% if 'EXTRUDER_TEMP' in params|upper %}
    #{% set nozzle_clear_temp = params.EXTRUDER_TEMP %}
    {% set nozzle_clear_temp = 200 %}
  {% endif %}

  G28
  BED_MESH_CLEAR
  NOZZLE_CLEAR HOT_MIN_TEMP={extruder_temp} HOT_MAX_TEMP={nozzle_clear_temp} BED_MAX_TEMP={bed_temp}
  ACCURATE_G28
  M204 S5000
  SET_VELOCITY_LIMIT ACCEL_TO_DECEL=5000
  BED_MESH_CALIBRATE {get_count}
  BED_MESH_OUTPUT
  #{% set y_park = printer.toolhead.axis_maximum.y/2 %}
  #{% set x_park = printer.toolhead.axis_maximum.x|float - 10.0 %}
  {% set y_park = 400 %}
  {% set x_park = 400 %}
  #G1 X{x_park} Y{y_park} F2000
  CXSAVE_CONFIG
  TURN_OFF_HEATERS


[gcode_macro FIRST_FLOOR_PAUSE_POSITION]
gcode:
  {% set extruder_temp = printer.custom_macro.g28_ext_temp %}
  M104 S{extruder_temp}
  #{% set y_park = printer.toolhead.axis_maximum.y/2 %}
  #{% set x_park = printer['gcode_macro PRINTER_PARAM'].max_x_position|float + 1 %}
  {% set y_park = 400 %}
  {% set x_park = 400 %}
  G90
  G1 Z2 F600
  G1 X{x_park} Y{y_park} F6000
  G1 Z0.2 F600

[gcode_macro FIRST_FLOOR_RESUME]
description: Resume the first floor print
gcode:
    ##### read E from pause macro #####
  {% set E = printer["gcode_macro FIRST_FLOOR_PAUSE"].extrude|float + 1.0 %}
  #### get VELOCITY parameter if specified ####
  {% if 'VELOCITY' in params|upper %}
    {% set get_params = ('VELOCITY=' + params.VELOCITY) %}
  {%else %}
    {% set get_params = "" %}
  {% endif %}
  ##### end of definitions #####
  {% if printer.extruder.can_extrude|lower == 'true' %}
    G91
    G1 E{E} F2100
  {% else %}
    {action_respond_info("Extruder not hot enough")}
  {% endif %}
  RESUME_BASE {get_params}

[gcode_macro FIRST_FLOOR_PAUSE]
description: Pause the first floor print
# change this if you need more or less extrusion
variable_extrude: 2.0
gcode:
  ##### read E from pause macro #####
  {% set E = printer["gcode_macro FIRST_FLOOR_PAUSE"].extrude|float %}
  ##### set park positon for x and y #####
  # default is your max posion from your printer.cfg

  #{% set y_park = printer.toolhead.axis_maximum.y/2 %}
  #{% set x_park = printer.toolhead.axis_maximum.x|float - 10.0 %}
  {% set y_park = 400 %}
  {% set x_park = 400 %}  
  ##### calculate save lift position #####
  {% set max_z = printer["gcode_macro PRINTER_PARAM"].max_z_position|float %}
  {% set act_z = printer.toolhead.position.z|float %}
  {% set z_safe = 0.0 %}
  {% if act_z < (max_z - 2.0) %}
    {% set z_safe = 2.0 %}
  {% elif act_z < max_z %}
    {% set z_safe = max_z - act_z %}
  {% endif %}
  ##### end of definitions #####
  SET_GCODE_VARIABLE MACRO=PRINTER_PARAM VARIABLE=z_safe_pause VALUE={z_safe|float}
  PAUSE_BASE
  G91
  {% if "xyz" in printer.toolhead.homed_axes %}
    {% if printer.extruder.can_extrude|lower == 'true' %}
      G1 E-1.0 F180
      G1 E-{E} F4000
    {% else %}
      {action_respond_info("Extruder not hot enough")}
    {% endif %}
    G1 Z{z_safe} F600
    G90
    G1 X{x_park} Y{y_park} F30000
  {% else %}
    {action_respond_info("Printer not homed")}
  {% endif %}
  # save fan2 value and turn off fan2
  SET_GCODE_VARIABLE MACRO=PRINTER_PARAM VARIABLE=fan2_speed VALUE={printer['output_pin fan2'].value}
  {% set fspeed = printer['gcode_macro PRINTER_PARAM'].fan2_speed %}
  {action_respond_info("fan2_value = %s \n" % (fspeed))}
  # SET_PIN PIN=fan2 VALUE=0
  #M106 P2 S0

[gcode_macro PAUSE]
description: Pause the actual running print
rename_existing: PAUSE_BASE
# change this if you need more or less extrusion
variable_extrude: 1.0
gcode:
    ##### read E from pause macro #####
    {% set E = printer["gcode_macro PAUSE"].extrude|float %}
    ##### set park positon for x and y #####
    # default is your max posion from your printer.cfg
    # {% set x_park = printer.toolhead.axis_maximum.x|float - 5.0 %}
    # {% set y_park = printer.toolhead.axis_maximum.y|float - 5.0 %}
    RED_LED_OFF
    GREEN_LED_OFF
    YELLOW_LED_ON
    #{% set x_park = 400 %}
    #{% set y_park = 400 %}
    {% set x_park = 0 %}
    {% set y_park = 0 %}
    ##### calculate save lift position #####
    {% set max_z = printer.toolhead.axis_maximum.z|float %}
    {% set act_z = printer.toolhead.position.z|float %}
    {% if act_z < 48.0 %}
        {% set z_safe = 50.0 - act_z %}
    {% elif act_z < (max_z - 2.0) %}
        {% set z_safe = 2.0 %}
    {% else %}
        {% set z_safe = max_z - act_z %}
    {% endif %}
    SET_GCODE_VARIABLE MACRO=PRINTER_PARAM VARIABLE=z_safe_pause VALUE={z_safe|float}
    ##### end of definitions #####
    PAUSE_BASE
    G91
    {% if printer.extruder.can_extrude|lower == 'true' %}
      G1 E-{E} F2100
    {% else %}
      {action_respond_info("Extruder not hot enough")}
    {% endif %}
    {% if "xyz" in printer.toolhead.homed_axes %}
      G1 Z{z_safe} F300
      G90
      G1 X{x_park} Y{y_park} F6000
      M400

      #yinzhi
      #{action_respond_info("---------yyyinzhi pause print callback----vvvvvvvvvv1122---- \n")}
      {% set cur_temp = printer.extruder.temperature %}
      SET_GCODE_VARIABLE MACRO=PRINTER_PARAM VARIABLE=extruder_save_temp VALUE={cur_temp|int}
      M104 S140
      #M140 S60
      #M107
    {% else %}
      {action_respond_info("Printer not homed")}
    {% endif %} 
    
[gcode_macro RESUME]
description: Resume the actual running print
rename_existing: RESUME_BASE
gcode:
    ##### read E from pause macro #####
    {% set E = printer["gcode_macro PAUSE"].extrude|float %}
    #### get VELOCITY parameter if specified ####
    {% if 'VELOCITY' in params|upper %}
      {% set get_params = ('VELOCITY=' + params.VELOCITY)  %}
    {%else %}
      {% set get_params = "" %}
    {% endif %}
    {% set z_resume_move = printer['gcode_macro PRINTER_PARAM'].z_safe_pause|int %}
    {% if z_resume_move > 2 %}
      {% set z_resume_move = z_resume_move - 2 %}
      G91
      G1 Z-{z_resume_move} F600
      M400
    {% endif %}

    ##### end of definitions #####
    {% if printer.extruder.can_extrude|lower == 'true' %}
      G91
      G1 E{E} F2100
    {% else %}
      {action_respond_info("Extruder not hot enough")}
    {% endif %}  
    RESUME_BASE {get_params}
    RED_LED_OFF
    GREEN_LED_ON
    YELLOW_LED_OFF


[gcode_macro M900]
gcode:
  {% if 'K' in params %}
    {% if 'E' in params %}
      SET_PRESSURE_ADVANCE EXTRUDER={params.E} ADVANCE={params.K}
    {% else %}
      SET_PRESSURE_ADVANCE ADVANCE={params.K}
    {% endif %}
  {% endif %}


[gcode_arcs]#打印圆
resolution: 1.0


[gcode_macro M204]
rename_existing: M204.1
gcode:
  # {% if printer['gcode_macro Qmode'].flag|int == 0 %}
  {% set get_params = "" %}
  {% if 'S' in params|upper %}
    {% set get_params = (get_params + ' ' + 'S' + params.S) %}
  {% endif %}
  {% if 'P' in params|upper %}
    {% set get_params = (get_params + ' ' + 'P' + params.P) %}
  {% endif %}
  {% if 'T' in params|upper %}
    {% set get_params = (get_params + ' ' + 'T' + params.T) %}
  {% endif %}
  M204.1 {get_params}
  # {% endif %}


[gcode_macro M205]
gcode:
  {% if 'X' in params %}
    SET_VELOCITY_LIMIT SQUARE_CORNER_VELOCITY={params.X}
  {% elif 'Y' in params %}
    SET_VELOCITY_LIMIT SQUARE_CORNER_VELOCITY={params.Y}
  {% endif %}


[gcode_macro ACCURATE_G28]
gcode:
  G28 Z

#[gcode_macro G29]
#gcode:
#  M204 S5000
#  G90
#  G28
#  Z_OFFSET_AUTO
#  M104S0
#  M107
#  G28 Z
#  BED_MESH_CALIBRATE
#  G1 X200Y200Z10
#  M140S0
#  CXSAVE_CONFIG
[gcode_macro G29]
gcode:
  {% if 'PROBE_COUNT' in params|upper %}
    {% set get_count = ('PROBE_COUNT' + params.PROBE_COUNT) %}
  {%else %}
    {% set get_count = "" %}
  {% endif %}

  {% set bed_temp = printer.custom_macro.default_bed_temp %}
  {% set extruder_temp = printer.custom_macro.g28_ext_temp %}
  {% set nozzle_clear_temp = printer.custom_macro.default_extruder_temp %}

  {% if 'BED_TEMP' in params|upper %}
    {% set bed_temp = params.BED_TEMP %}
  {% endif %}

  {% if 'EXTRUDER_TEMP' in params|upper %}
    {% set nozzle_clear_temp = params.EXTRUDER_TEMP %}
  {% endif %}

  G28
  BED_MESH_CLEAR
  NOZZLE_CLEAR HOT_MIN_TEMP={extruder_temp} HOT_MAX_TEMP={nozzle_clear_temp} BED_MAX_TEMP={bed_temp}
  ACCURATE_G28
  M204 S5000
  SET_VELOCITY_LIMIT ACCEL_TO_DECEL=5000
  BED_MESH_CALIBRATE {get_count}
  BED_MESH_OUTPUT
  #{% set y_park = printer.toolhead.axis_maximum.y/2 %}
  #{% set x_park = printer.toolhead.axis_maximum.x|float - 10.0 %}
  #{% set y_park = 400 %}
  #{% set x_park = 400 %}
  {% set y_park = 200 %}
  {% set x_park = 200 %}
  G1 X{x_park} Y{y_park} F2000
  CXSAVE_CONFIG
  TURN_OFF_HEATERS


[gcode_macro Z_OFFSET_TEST]
gcode:
  # Z_OFFSET_AUTO
  G28
  # NOZZLE_CLEAR
  Z_OFFSET_CALIBRATION
  CXSAVE_CONFIG 


[gcode_macro ZZ_OFFSET_TEST]
gcode:
  G28
  Z_OFFSET_AUTO
  # NOZZLE_CLEAR
  # Z_OFFSET_CALIBRATION
  CXSAVE_CONFIG 


# [gcode_macro M106]
# gcode:
#   {% set fan = 0 %}
#   {% set value = 255 %}
#   {% if params.S is defined %}
#     {% set tmp = params.S|int %}
#     {% if tmp <= 255 %}
#       {% set value = tmp %}
#     {% endif %}
#   {% endif %}
#   {% if params.P is defined %}
#     {% if params.P|int == 0 %}
#         {% set value = printer["gcode_macro PRINTER_PARAM"].fan0_min + (255 - printer["gcode_macro PRINTER_PARAM"].fan0_min) / 255 * tmp %}
#         SET_PIN PIN=fan0 VALUE={value}
#         SET_PIN PIN=col_pwm VALUE={value} #yinzhi
#     {% endif %}
#   {% else %}
#     {% set value = printer["gcode_macro PRINTER_PARAM"].fan0_min + (255 - printer["gcode_macro PRINTER_PARAM"].fan0_min) / 255 * tmp %}
#     SET_PIN PIN=fan0 VALUE={value}
#     SET_PIN PIN=col_pwm VALUE={value} #yinzhi
#   {% endif %}
#   {% if tmp < 1 %}
#     {% set value = tmp %}
#     SET_PIN PIN=fan0 VALUE={value}
#     SET_PIN PIN=col_pwm VALUE={value} #yinzhi
#   {% endif %}


# [gcode_macro M107]
# gcode:
#   {% if params.P is defined %}
#     SET_PIN PIN=fan0 VALUE=0
#     SET_PIN PIN=col_pwm VALUE=0
#   {% else %}
#     SET_PIN PIN=fan0 VALUE=0
#     SET_PIN PIN=col_pwm VALUE=0
#     # SET_PIN PIN=fan2 VALUE=0
#   {% endif %}


[gcode_macro LOAD_MATERIAL]
gcode:
  SAVE_GCODE_STATE NAME=myMoveState
  M109 S{printer.custom_macro.default_extruder_temp}
  G91
  G1 E150 F180
  RESTORE_GCODE_STATE NAME=myMoveState

[gcode_macro QUIT_MATERIAL]
gcode:
  SAVE_GCODE_STATE NAME=myMoveState
  M109 S{printer.custom_macro.default_extruder_temp}
  G91
  G1 E20 F180
  G1 E-30 F180
  G1 E-50 F2000
  RESTORE_GCODE_STATE NAME=myMoveState


[gcode_macro M600]
gcode:
  PAUSE
  {% set act_e = printer.toolhead.position.e|float %}
  G91
  G1 E20 F180
  G1 E-30 F180
  G1 E-50 F2000
  G90
  G92 E{act_e}


[gcode_macro FINISH_INIT]
gcode:
  M204 S5000
  SET_PRESSURE_ADVANCE ADVANCE=0.04


###YINZHI
[gcode_macro RED_LED_ON]
gcode:
  SET_PIN PIN=red_pin VALUE=1

[gcode_macro RED_LED_OFF]
gcode:
  SET_PIN PIN=red_pin VALUE=0

[gcode_macro GREEN_LED_ON]
gcode:
  SET_PIN PIN=green_pin VALUE=1

[gcode_macro GREEN_LED_OFF]
gcode:
  SET_PIN PIN=green_pin VALUE=0

[gcode_macro YELLOW_LED_ON]
gcode:
  SET_PIN PIN=yellow_pin VALUE=1

[gcode_macro YELLOW_LED_OFF]
gcode:
  SET_PIN PIN=yellow_pin VALUE=0

[gcode_macro LIGHT_LED_ON]
gcode:
  SET_PIN PIN=light_pin VALUE=1

[gcode_macro LIGHT_LED_OFF]
gcode:
  SET_PIN PIN=light_pin VALUE=0


[gcode_macro INPUTSHAPER]
gcode:
  #M84
  SET_FILAMENT_SENSOR SENSOR=filament_sensor ENABLE=0
  G90
  G28 X Y Z
  {% set POSITION_X = 200 %}
  {% set POSITION_Y = 200 %}
  G1 X{POSITION_X} Y{POSITION_Y} Z5 F6000
  #G4 P300
  #{% if 'X' in params.AXES|upper %}
  #  SHAPER_CALIBRATE AXIS=x
  #{% elif 'Y' in params.AXES|upper %}
  #  SHAPER_CALIBRATE AXIS=y
  #{% else %}
  SHAPER_CALIBRATE
  #{% endif %}
  CXSAVE_CONFIG
  SET_FILAMENT_SENSOR SENSOR=filament_sensor ENABLE=1

[gcode_macro AUTOTUNE_SHAPERS]
variable_autotune_shapers: 'ei'
gcode:

[gcode_macro TUNOFFINPUTSHAPER]
gcode:
  SET_INPUT_SHAPER SHAPER_FREQ_X=0 SHAPER_FREQ_Y=0

[gcode_macro BEDPID]
gcode:
  PID_CALIBRATE HEATER=heater_bed TARGET=100
  SAVE_CONFIG

[gcode_macro PRINT_FINI_ZDN]
gcode:
  {% set cur_remain = (406.0 - printer.toolhead.position.z)|float %}
  {action_respond_info("====cxzz11=====PRINT_FINI_ZDN====position.z:%f====cur_remain:%f====\n" % ( printer.toolhead.position.z, cur_remain))}
  {% if (cur_remain > 0) %}
    {% if (cur_remain < 50) %}
      {action_respond_info("========1111111====zz==== \n")}
      FORCE_MOVE STEPPER=stepper_z DISTANCE={cur_remain} VELOCITY=10
    {% else %}
      {action_respond_info("========2222222====zz==== \n")}
      FORCE_MOVE STEPPER=stepper_z DISTANCE=50 VELOCITY=10
    {% endif %}
  {% endif %}
